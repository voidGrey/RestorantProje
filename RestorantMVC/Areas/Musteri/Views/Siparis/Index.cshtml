@model List<Entites.Concrate.SiparisDetay>


<h1>Siparişler</h1>

<table class="table">
    <thead>
        <tr>
            <th>
                Masa ID
            </th>
            <th>
                UrunAdi
            </th>
            <th>
                Fiyat
            </th>
            <th>
                Adet
            </th>
            <th>
                Toplam
            </th>
            <th>
                Sipariş Durumu
            </th>
            <th>
                Sipariş Tarihi
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.SiparisMaster.MasaId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Urun.UrunAdi)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Fiyat) TL
            </td>
            <td>

                    @if(item.status == SiparisDetay.Status.Onay_Bekliyor)
                    {
                        <button class="btn btn-sm btn-primary" onclick="increaseQuantity(@item.UrunId)">+</button>
                        <span id="quantity-@item.UrunId">@item.Adet</span>
                        <input type="hidden" value="@item.SiparisMasterId" id="masterId">
                        <input type="hidden" value="@item.ID" id="detailsId">
                        <button class="btn btn-sm btn-primary" onclick="decreaseQuantity(@item.UrunId)">-</button>
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.Adet)
                    }

            </td>
            <td>
                    @(item.Fiyat * item.Adet) TL
            </td>
             <td>
                    @Html.DisplayFor(modelItem => item.status)
                </td> 
            <td>
                @Html.DisplayFor(modelItem => item.CreateTime)
            </td>
            <td>
                @if (item.status == SiparisDetay.Status.Onay_Bekliyor)
                    {
                        <a asp-action="Onayla" asp-route-id="@item.ID">Onayla</a>
                        <a asp-action="Edit" asp-route-id="@item.ID">Edit</a>
                        <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                    }
                <a asp-action="Details" asp-route-id="@item.ID">Details</a>
                
            </td>
        </tr>
        }
    </tbody>
</table>
@foreach (var item in Model)
{
    <center>
        <b>
            Toplam Tutar :  @Html.DisplayFor(modelItem => item.SiparisMaster.ToplamTutar) TL
        </b>
    </center>
    break;
}
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.10/signalr.min.js"></script>

<script>
    function increaseQuantity(itemId) {
        var masterId = document.getElementById('masterId');
        var postMasterId = parseInt(masterId.value);

        var detailsId = document.getElementById('detailsId');
        var postDetailsId = parseInt(detailsId.value);

        var quantityElement = document.getElementById('quantity-' + itemId);
        var currentQuantity = parseInt(quantityElement.textContent);
        var newQuantity = currentQuantity + 1;

        // AJAX isteği gönder
        $.ajax({
            type: "POST",
            url: "/Musteri/Siparis/UpdateQuantity",
            data: { itemId: itemId, newQuantity: newQuantity, masterId: postMasterId, detailsId: postDetailsId },
            success: function (data) {
                // Veritabanı güncellendikten sonra geri dönen veriyi işle
                quantityElement.textContent = data.updatedQuantity;
            }
        });
    }

    function decreaseQuantity(itemId) {
        var masterId = document.getElementById('masterId');
        var postMasterId = parseInt(masterId.value);

        var detailsId = document.getElementById('detailsId');
        var postDetailsId = parseInt(detailsId.value);

        var quantityElement = document.getElementById('quantity-' + itemId);
        var currentQuantity = parseInt(quantityElement.textContent);
        if (currentQuantity > 1) {
            var newQuantity = currentQuantity - 1;

            // AJAX isteği gönder
            $.ajax({
                type: "POST",
                url: "/Musteri/Siparis/UpdateQuantity",
                data: { itemId: itemId, newQuantity: newQuantity, masterId: postMasterId, detailsId: postDetailsId },
                success: function (data) {
                    // Veritabanı güncellendikten sonra geri dönen veriyi işle
                    quantityElement.textContent = data.updatedQuantity;
                }
            });
        }
    }
</script>
